/*base_step的函数，计算最后一小段T的Ψ值*/
int* base_step(char T[], int l)
{
	char a[1000][1000];
	strcpy(a[0], T);
	int len = strlen(a[0]);
	for (int i = 0; i < len - 1; i++)
	{
		int k = 0;
		for (int j = i + 1; j < len; j++)
		{
			a[i + 1][k++] = a[0][j];
		}
		a[i + 1][k] = '\0';
	}
	qsort(a, len, sizeof(a[0]), cmp);
	/*for (int i = 0; i < len; i++)
		printf("%s\n", a[i]);*/
		//构建SA数组
	int SA[n];
	for (int m = 0; m < l; m++)
	{
		SA[m] = len - strlen(a[m]);
	}
	/*for (int i = 0; i < len; i++)
		printf("%d\n", SA[i]);*/
		//构建SA_1数组
	int SA_1[n];
	for (int q = 0; q < l; q++)
	{
		SA_1[SA[q]] = q;
	}
	
	//cout << len << endl;
	//cout << strlen(a[0]);
	//构建Ψ函数
	int Ψ[n];
	for (int p = 1; p < l; p++)
	{
		Ψ[p] = SA_1[SA[p] + 1];
	}
	Ψ[0] = SA_1[0];
	return &Ψ[0];
}
